{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serv_\\\\source\\\\repos\\\\TryReact4usik\\\\GB_React\\\\myapp\\\\src\\\\pages\\\\sign-in.jsx\",\n    _s = $RefreshSig$();\n\nimport { withFormik } from \"formik\";\nimport { Fragment, useEffect } from \"react\";\nimport { AuthForm } from \"../components/auth-form/auth-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../store/selectors/users\";\nimport { Link as RouteLink, useHistory } from \"react-router-dom\";\nimport { Divider, Typography, Link } from \"@mui/material\";\nimport { usePrevious } from \"../hooks\";\nimport { fetchSignInAction } from \"../slices/userSlice\";\nimport { REGISTRATION_ROUTE } from \"../constants/path\";\nimport { HOME_ROUTE } from \"../constants/path\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInForm = withFormik({\n  mapPropsToValues: () => ({\n    email: '',\n    password: ''\n  }),\n  handleSubmit: Function.prototype\n})(AuthForm);\n_c = SignInForm;\nexport const SignIn = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(getUser);\n  const prevUserValue = usePrevious(user);\n\n  const handleSignIn = authParams => {\n    dispatch(fetchSignInAction(authParams)); // console.log(getDataUser(setListenerDBUser));\n    // if (Object.keys(setListenerDBUser()).includes(user.uid)) {\n    //     // writeUserData(user.uid, 'USER1', user.email);\n    //     console.log('Yes');\n    // }\n  };\n\n  useEffect(() => {\n    if (user.token && !prevUserValue.token) {\n      history.push(HOME_ROUTE);\n    }\n  }, [user, history, prevUserValue]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 700,\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignInForm, {\n      onSubmit: handleSignIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mt: '16px',\n        mb: '8px',\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        textAlign: 'center',\n        color: 'white'\n      },\n      children: [\"If you don't have an account, \", /*#__PURE__*/_jsxDEV(Link, {\n        component: RouteLink,\n        to: REGISTRATION_ROUTE,\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"JqU2GilcHZiSe4bo9FwVG3yBHE8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, usePrevious];\n});\n\n_c2 = SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInForm\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"names":["withFormik","Fragment","useEffect","AuthForm","useDispatch","useSelector","getUser","Link","RouteLink","useHistory","Divider","Typography","usePrevious","fetchSignInAction","REGISTRATION_ROUTE","HOME_ROUTE","SignInForm","mapPropsToValues","email","password","handleSubmit","Function","prototype","SignIn","dispatch","history","user","prevUserValue","handleSignIn","authParams","token","push","fontWeight","textAlign","color","mt","mb"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/pages/sign-in.jsx"],"sourcesContent":["import { withFormik } from \"formik\";\nimport { Fragment, useEffect } from \"react\";\nimport { AuthForm } from \"../components/auth-form/auth-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUser } from \"../store/selectors/users\";\nimport { Link as RouteLink, useHistory } from \"react-router-dom\";\nimport { Divider, Typography, Link } from \"@mui/material\";\nimport { usePrevious } from \"../hooks\";\nimport { fetchSignInAction } from \"../slices/userSlice\";\nimport { REGISTRATION_ROUTE } from \"../constants/path\";\nimport { HOME_ROUTE } from \"../constants/path\";\n\nconst SignInForm = withFormik({\n    mapPropsToValues: () => ({ email: '', password: ''}),\n    handleSubmit: Function.prototype,\n})(AuthForm);\n\nexport const SignIn = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = useSelector(getUser);\n    const prevUserValue = usePrevious(user);\n\n\n    const handleSignIn = (authParams) => {\n        dispatch(fetchSignInAction(authParams));\n        // console.log(getDataUser(setListenerDBUser));\n\n        // if (Object.keys(setListenerDBUser()).includes(user.uid)) {\n        //     // writeUserData(user.uid, 'USER1', user.email);\n        //     console.log('Yes');\n        // }\n    }\n\n    useEffect(() => {\n        if(user.token && !prevUserValue.token) {\n            history.push(HOME_ROUTE);\n        }\n    }, [user, history, prevUserValue]);\n\n    return (\n        <Fragment>\n            <Typography variant=\"h2\" gutterBottom sx={{ fontWeight: 700, textAlign: 'center', color: 'white' }}>\n                Sign In\n            </Typography>\n            <SignInForm onSubmit={handleSignIn} />\n            <Divider sx={{mt: '16px', mb: '8px', color: 'white' }} />\n            <Typography variant=\"body1\" sx={{ textAlign: 'center', color: 'white' }}>\n                If you don't have an account, <Link component={RouteLink} to={REGISTRATION_ROUTE} >register</Link>\n            </Typography>\n        </Fragment>\n    )\n}"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,IAAI,IAAIC,SAAjB,EAA4BC,UAA5B,QAA8C,kBAA9C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BJ,IAA9B,QAA0C,eAA1C;AACA,SAASK,WAAT,QAA4B,UAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,UAAU,GAAGhB,UAAU,CAAC;EAC1BiB,gBAAgB,EAAE,OAAO;IAAEC,KAAK,EAAE,EAAT;IAAaC,QAAQ,EAAE;EAAvB,CAAP,CADQ;EAE1BC,YAAY,EAAEC,QAAQ,CAACC;AAFG,CAAD,CAAV,CAGhBnB,QAHgB,CAAnB;KAAMa,U;AAKN,OAAO,MAAMO,MAAM,GAAG,MAAM;EAAA;;EAExB,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;EACA,MAAMqB,OAAO,GAAGhB,UAAU,EAA1B;EACA,MAAMiB,IAAI,GAAGrB,WAAW,CAACC,OAAD,CAAxB;EACA,MAAMqB,aAAa,GAAGf,WAAW,CAACc,IAAD,CAAjC;;EAGA,MAAME,YAAY,GAAIC,UAAD,IAAgB;IACjCL,QAAQ,CAACX,iBAAiB,CAACgB,UAAD,CAAlB,CAAR,CADiC,CAEjC;IAEA;IACA;IACA;IACA;EACH,CARD;;EAUA3B,SAAS,CAAC,MAAM;IACZ,IAAGwB,IAAI,CAACI,KAAL,IAAc,CAACH,aAAa,CAACG,KAAhC,EAAuC;MACnCL,OAAO,CAACM,IAAR,CAAahB,UAAb;IACH;EACJ,CAJQ,EAIN,CAACW,IAAD,EAAOD,OAAP,EAAgBE,aAAhB,CAJM,CAAT;EAMA,oBACI,QAAC,QAAD;IAAA,wBACI,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAyB,YAAY,MAArC;MAAsC,EAAE,EAAE;QAAEK,UAAU,EAAE,GAAd;QAAmBC,SAAS,EAAE,QAA9B;QAAwCC,KAAK,EAAE;MAA/C,CAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII,QAAC,UAAD;MAAY,QAAQ,EAAEN;IAAtB;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI,QAAC,OAAD;MAAS,EAAE,EAAE;QAACO,EAAE,EAAE,MAAL;QAAaC,EAAE,EAAE,KAAjB;QAAwBF,KAAK,EAAE;MAA/B;IAAb;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI,QAAC,UAAD;MAAY,OAAO,EAAC,OAApB;MAA4B,EAAE,EAAE;QAAED,SAAS,EAAE,QAAb;QAAuBC,KAAK,EAAE;MAA9B,CAAhC;MAAA,0DACkC,QAAC,IAAD;QAAM,SAAS,EAAE1B,SAAjB;QAA4B,EAAE,EAAEM,kBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADlC;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CApCM;;GAAMS,M;UAEQnB,W,EACDK,U,EACHJ,W,EACSO,W;;;MALbW,M"},"metadata":{},"sourceType":"module"}