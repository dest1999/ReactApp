{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serv_\\\\source\\\\repos\\\\TryReact4usik\\\\GB_React\\\\myapp\\\\src\\\\pages\\\\gists-page.jsx\",\n    _s = $RefreshSig$();\n\nimport { CircularProgress } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { API_URL_PUBLIC } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GistsList = () => {\n  _s();\n\n  const [gists, setGists] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const requestGists = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(API_URL_PUBLIC);\n\n      if (!response.ok) {\n        throw new Error(`Request failed with status ${response.status}`);\n      }\n\n      const result = await response.json();\n      setGists(result);\n    } catch (err) {\n      setError(true);\n      console.warn(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    requestGists();\n  }, []);\n  const renderGist = useCallback(gist => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: gist.description\n  }, gist.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this), []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestGists,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {\n      className: \"gistsloader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"gists\",\n    children: gists.map(renderGist)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GistsList, \"0ITQ4idU156A/3T4rMqZOanCsHM=\");\n\n_c = GistsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GistsList\");","map":{"version":3,"names":["CircularProgress","useState","useEffect","useCallback","API_URL_PUBLIC","GistsList","gists","setGists","error","setError","loading","setLoading","requestGists","response","fetch","ok","Error","status","result","json","err","console","warn","renderGist","gist","description","id","map"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/pages/gists-page.jsx"],"sourcesContent":["import { CircularProgress } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { API_URL_PUBLIC } from \"../constants\";\n\nexport const GistsList = () => {\n    const [gists, setGists] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const requestGists = async () => {\n        setLoading(true);\n\n        try {\n            const response = await fetch (API_URL_PUBLIC);\n\n            if (!response.ok) {\n                throw new Error(`Request failed with status ${response.status}`);\n            }\n\n            const result = await response.json();\n            \n            setGists(result);\n        } catch (err) {\n            setError(true);\n            console.warn(err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        requestGists();\n    }, []);\n    \n    const renderGist = useCallback(\n        (gist) => <li key={gist.id}>{gist.description}</li>,\n        []\n    );\n\n    if (error) {\n        return (\n            <div className=\"error\">\n                <h3>Error</h3>\n                <button onClick={requestGists}>Retry</button>\n            </div>\n        );\n    }\n    \n    if (loading) {\n        return <CircularProgress className=\"gistsloader\"/>;\n    }\n\n    return <ul className=\"gists\">{ gists.map(renderGist) }</ul>\n}\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,eAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMW,YAAY,GAAG,YAAY;IAC7BD,UAAU,CAAC,IAAD,CAAV;;IAEA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAEV,cAAF,CAA5B;;MAEA,IAAI,CAACS,QAAQ,CAACE,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAW,8BAA6BH,QAAQ,CAACI,MAAO,EAAxD,CAAN;MACH;;MAED,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;MAEAZ,QAAQ,CAACW,MAAD,CAAR;IACH,CAVD,CAUE,OAAOE,GAAP,EAAY;MACVX,QAAQ,CAAC,IAAD,CAAR;MACAY,OAAO,CAACC,IAAR,CAAaF,GAAb;IACH,CAbD,SAaU;MACNT,UAAU,CAAC,KAAD,CAAV;IACH;EACJ,CAnBD;;EAqBAT,SAAS,CAAC,MAAM;IACZU,YAAY;EACf,CAFQ,EAEN,EAFM,CAAT;EAIA,MAAMW,UAAU,GAAGpB,WAAW,CACzBqB,IAAD,iBAAU;IAAA,UAAmBA,IAAI,CAACC;EAAxB,GAASD,IAAI,CAACE,EAAd;IAAA;IAAA;IAAA;EAAA,QADgB,EAE1B,EAF0B,CAA9B;;EAKA,IAAIlB,KAAJ,EAAW;IACP,oBACI;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,OAAO,EAAEI,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;EAED,IAAIF,OAAJ,EAAa;IACT,oBAAO,QAAC,gBAAD;MAAkB,SAAS,EAAC;IAA5B;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBAAO;IAAI,SAAS,EAAC,OAAd;IAAA,UAAwBJ,KAAK,CAACqB,GAAN,CAAUJ,UAAV;EAAxB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAjDM;;GAAMlB,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}