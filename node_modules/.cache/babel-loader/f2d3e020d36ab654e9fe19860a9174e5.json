{"ast":null,"code":"import { API_URL_PUBLIC } from \".\"; // export const GET_GISTS = 'GET_GISTS';\n\nexport const GET_GISTS_REQUEST = 'GET_GISTS_REQUEST';\nexport const GET_GISTS_SUCCESS = 'GET_GISTS_SUCCESS';\nexport const GET_GISTS_FAILURE = 'GET_GISTS_FAILURE'; // export const getGists = () => ({\n//     type: GET_GISTS\n// });\n\nexport const getGistsRequest = () => ({\n  type: GET_GISTS_REQUEST\n});\nexport const getGistsSuccess = gists => ({\n  type: GET_GISTS_SUCCESS,\n  payload: gists\n});\nexport const getGistsFailure = err => ({\n  type: GET_GISTS_FAILURE,\n  payload: err\n});\nexport const getAllGists = () => async dispatch => {\n  dispatch(getGistsRequest());\n\n  try {\n    const res = await fetch(API_URL_PUBLIC);\n\n    if (!res.ok) {\n      throw new Error(`Request failed with status ${res.status}`);\n    }\n\n    const result = await res.json();\n    dispatch(getGistsSuccess(result));\n  } catch (err) {\n    dispatch(getGistsFailure(err.message));\n  }\n};","map":{"version":3,"names":["API_URL_PUBLIC","GET_GISTS_REQUEST","GET_GISTS_SUCCESS","GET_GISTS_FAILURE","getGistsRequest","type","getGistsSuccess","gists","payload","getGistsFailure","err","getAllGists","dispatch","res","fetch","ok","Error","status","result","json","message"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/constants/getGists.js"],"sourcesContent":["import { API_URL_PUBLIC } from \".\";\n\n// export const GET_GISTS = 'GET_GISTS';\nexport const GET_GISTS_REQUEST = 'GET_GISTS_REQUEST';\nexport const GET_GISTS_SUCCESS = 'GET_GISTS_SUCCESS';\nexport const GET_GISTS_FAILURE = 'GET_GISTS_FAILURE';\n\n\n// export const getGists = () => ({\n//     type: GET_GISTS\n// });\n\nexport const getGistsRequest = () => ({\n    type: GET_GISTS_REQUEST\n});\n\nexport const getGistsSuccess = (gists) => ({\n    type: GET_GISTS_SUCCESS,\n    payload: gists\n});\n\nexport const getGistsFailure = (err) => ({\n    type: GET_GISTS_FAILURE,\n    payload: err\n});\n\nexport const getAllGists = () => async (dispatch) => {\n    dispatch(getGistsRequest());\n\n    try {\n        const res = await fetch(API_URL_PUBLIC);\n\n        if (!res.ok) {\n            throw new Error(`Request failed with status ${res.status}`);\n        }\n        const result = await res.json();\n\n        dispatch(getGistsSuccess(result));\n    } catch (err) {\n        dispatch(getGistsFailure(err.message));\n    }\n}\n\n\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,GAA/B,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B,C,CAGP;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAO;EAClCC,IAAI,EAAEJ;AAD4B,CAAP,CAAxB;AAIP,OAAO,MAAMK,eAAe,GAAIC,KAAD,KAAY;EACvCF,IAAI,EAAEH,iBADiC;EAEvCM,OAAO,EAAED;AAF8B,CAAZ,CAAxB;AAKP,OAAO,MAAME,eAAe,GAAIC,GAAD,KAAU;EACrCL,IAAI,EAAEF,iBAD+B;EAErCK,OAAO,EAAEE;AAF4B,CAAV,CAAxB;AAKP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACjDA,QAAQ,CAACR,eAAe,EAAhB,CAAR;;EAEA,IAAI;IACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAACd,cAAD,CAAvB;;IAEA,IAAI,CAACa,GAAG,CAACE,EAAT,EAAa;MACT,MAAM,IAAIC,KAAJ,CAAW,8BAA6BH,GAAG,CAACI,MAAO,EAAnD,CAAN;IACH;;IACD,MAAMC,MAAM,GAAG,MAAML,GAAG,CAACM,IAAJ,EAArB;IAEAP,QAAQ,CAACN,eAAe,CAACY,MAAD,CAAhB,CAAR;EACH,CATD,CASE,OAAOR,GAAP,EAAY;IACVE,QAAQ,CAACH,eAAe,CAACC,GAAG,CAACU,OAAL,CAAhB,CAAR;EACH;AACJ,CAfM"},"metadata":{},"sourceType":"module"}