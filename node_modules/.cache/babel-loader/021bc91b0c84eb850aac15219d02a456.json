{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serv_\\\\source\\\\repos\\\\TryReact4usik\\\\GB_React\\\\myapp\\\\src\\\\components\\\\Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Message } from \"./Message\";\nimport '../components/style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { AUTHOR } from \"../constants\";\nimport { addBotMessage } from \"../constants/addMessage\";\nimport { getMessagesList } from \"../store/selectors/messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet timer;\nexport const Messages = _ref => {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const messagesList = useSelector(getMessagesList);\n  const chat = messagesList[name] || [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _chat;\n\n    if (((_chat = chat[chat.length - 1]) === null || _chat === void 0 ? void 0 : _chat.author) === AUTHOR) {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        dispatch(addBotMessage(name));\n      }, 2500);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messagesList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatName\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), chat.map(message => /*#__PURE__*/_jsxDEV(Message, { ...message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Messages, \"8pog0J1M3HrO/PFoJTx9hqEZ4pY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","Message","useDispatch","useSelector","useEffect","AUTHOR","addBotMessage","getMessagesList","timer","Messages","name","messagesList","chat","dispatch","length","author","clearTimeout","setTimeout","map","message","id"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/components/Messages.jsx"],"sourcesContent":["import React from \"react\";\nimport { Message } from \"./Message\";\nimport '../components/style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { AUTHOR } from \"../constants\";\nimport { addBotMessage } from \"../constants/addMessage\";\nimport { getMessagesList } from \"../store/selectors/messages\"\n\nlet timer;\n\nexport const Messages = ({ name }) => {\n    const messagesList = useSelector(getMessagesList);\n    const chat = messagesList[name] || [];\n    const dispatch = useDispatch();\n    \n\n    useEffect(() => {\n\n        if(chat[chat.length-1]?.author === AUTHOR) {\n    \n          clearTimeout(timer);\n    \n          timer = setTimeout(() => {\n            dispatch(addBotMessage(name));\n          }, 2500);\n        }\n    \n        return () => {\n          clearTimeout(timer);\n        };\n        \n      });\n\n    return (\n    <>\n        \n        <div className=\"messagesList\">\n            <div className=\"chatName\">{name}</div>\n            {\n                chat.map((message) => <Message key={message.id} {...message} />)\n            }\n        </div>\n    </>\n        \n    )\n    \n}\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,yBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;AAEA,IAAIC,KAAJ;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAClC,MAAMC,YAAY,GAAGR,WAAW,CAACI,eAAD,CAAhC;EACA,MAAMK,IAAI,GAAGD,YAAY,CAACD,IAAD,CAAZ,IAAsB,EAAnC;EACA,MAAMG,QAAQ,GAAGX,WAAW,EAA5B;EAGAE,SAAS,CAAC,MAAM;IAAA;;IAEZ,IAAG,UAAAQ,IAAI,CAACA,IAAI,CAACE,MAAL,GAAY,CAAb,CAAJ,gDAAqBC,MAArB,MAAgCV,MAAnC,EAA2C;MAEzCW,YAAY,CAACR,KAAD,CAAZ;MAEAA,KAAK,GAAGS,UAAU,CAAC,MAAM;QACvBJ,QAAQ,CAACP,aAAa,CAACI,IAAD,CAAd,CAAR;MACD,CAFiB,EAEf,IAFe,CAAlB;IAGD;;IAED,OAAO,MAAM;MACXM,YAAY,CAACR,KAAD,CAAZ;IACD,CAFD;EAID,CAfM,CAAT;EAiBA,oBACA;IAAA,uBAEI;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAK,SAAS,EAAC,UAAf;QAAA,UAA2BE;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,EAGQE,IAAI,CAACM,GAAL,CAAUC,OAAD,iBAAa,QAAC,OAAD,OAA8BA;MAA9B,GAAcA,OAAO,CAACC,EAAtB;QAAA;QAAA;QAAA;MAAA,QAAtB,CAHR;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ,iBADA;AAaH,CApCM;;GAAMX,Q;UACYN,W,EAEJD,W;;;KAHRO,Q"},"metadata":{},"sourceType":"module"}