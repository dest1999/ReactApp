{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serv_\\\\source\\\\repos\\\\TryReact4usik\\\\GB_React\\\\myapp\\\\src\\\\components\\\\Message\\\\Message.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../components/style.css';\nimport { AUTHOR, BOT } from '../../constants';\nimport { getProfile } from '../../store/selectors/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Message = _ref => {\n  _s();\n\n  let {\n    author,\n    text\n  } = _ref;\n  const authorType = author === AUTHOR ? AUTHOR : BOT;\n  const userName = useSelector(getProfile).name;\n  const authorName = author === AUTHOR ? userName : BOT;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${authorType}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: authorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Message, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useSelector","AUTHOR","BOT","getProfile","Message","author","text","authorType","userName","name","authorName"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/components/Message/Message.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../components/style.css';\nimport { AUTHOR, BOT } from '../../constants';\nimport { getProfile } from '../../store/selectors/profile';\n\nexport const Message = ({ author, text }) => {\n    const authorType = author === AUTHOR ? AUTHOR : BOT;\n    const userName = useSelector(getProfile).name;\n    const authorName = author === AUTHOR ? userName : BOT;\n    \n    return (\n        <div className={ `message ${authorType}` }>\n            <span>{authorName}</span>\n            <span>{text}</span>\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,4BAAP;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC,MAAF;IAAUC;EAAV,CAAqB;EACzC,MAAMC,UAAU,GAAGF,MAAM,KAAKJ,MAAX,GAAoBA,MAApB,GAA6BC,GAAhD;EACA,MAAMM,QAAQ,GAAGR,WAAW,CAACG,UAAD,CAAX,CAAwBM,IAAzC;EACA,MAAMC,UAAU,GAAGL,MAAM,KAAKJ,MAAX,GAAoBO,QAApB,GAA+BN,GAAlD;EAEA,oBACI;IAAK,SAAS,EAAI,WAAUK,UAAW,EAAvC;IAAA,wBACI;MAAA,UAAOG;IAAP;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAOJ;IAAP;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAXM;;GAAMF,O;UAEQJ,W;;;KAFRI,O"},"metadata":{},"sourceType":"module"}