{"ast":null,"code":"import { AUTHOR, BOT } from \"../../constants\";\nimport { ADD_MESSAGE, ADD_BOT_MESSAGE, DEL_MESSAGES_WITH_CHAT } from \"../../constants/addMessage\";\nconst initialState = {\n  messageList: {\n    'Chat1': [{\n      id: 'Chat1.1',\n      text: 'message1',\n      author: AUTHOR\n    }],\n    'Chat2': [{\n      id: 'Chat2.1',\n      text: 'BotMessage1',\n      author: BOT\n    }]\n  }\n};\nexport const messagesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        const currentList = state.messageList[action.chatId] || [];\n        return { ...state,\n          messageList: { ...state.messageList,\n            [action.chatId]: [...currentList, {\n              id: `${action.chatId}.${currentList.length + 1}`,\n              text: action.message,\n              author: AUTHOR\n            }]\n          }\n        };\n      }\n      ;\n\n    case ADD_BOT_MESSAGE:\n      {\n        const currentList = state.messageList[action.chatId] || [];\n        return { ...state,\n          messageList: { ...state.messageList,\n            [action.chatId]: [...currentList, {\n              id: `${action.chatId}.${currentList.length + 1}`,\n              text: 'Я бот',\n              author: BOT\n            }]\n          }\n        };\n      }\n      ;\n\n    case DEL_MESSAGES_WITH_CHAT:\n      {\n        delete state.messageList[\"Chat\" + action.chatId];\n        const currentList = state.messageList;\n        return { ...state,\n          messageList: { ...currentList\n          }\n        };\n      }\n      ;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["AUTHOR","BOT","ADD_MESSAGE","ADD_BOT_MESSAGE","DEL_MESSAGES_WITH_CHAT","initialState","messageList","id","text","author","messagesReducer","state","action","type","currentList","chatId","length","message"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/reducers/messages/addMessage.js"],"sourcesContent":["import { AUTHOR, BOT } from \"../../constants\";\nimport { ADD_MESSAGE, ADD_BOT_MESSAGE, DEL_MESSAGES_WITH_CHAT } from \"../../constants/addMessage\";\n\nconst initialState = {\n    messageList: {\n        'Chat1': [{\n            id: 'Chat1.1',\n            text: 'message1',\n            author: AUTHOR,\n        }],\n        'Chat2': [{\n            id: 'Chat2.1',\n            text: 'BotMessage1',\n            author: BOT,\n        }]\n        \n    },\n};\n\nexport const messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            const currentList = state.messageList[action.chatId] || [];\n            return {\n                ...state,\n                messageList: {\n                    ...state.messageList,\n                    [action.chatId]: [\n                        ...currentList,\n                        {\n                            id: `${action.chatId}.${currentList.length+1}`,\n                            text: action.message,\n                            author: AUTHOR,\n                        },\n                    ],\n                },\n            };\n        };\n        case ADD_BOT_MESSAGE: {\n            const currentList = state.messageList[action.chatId] || [];\n            return {\n                ...state,\n                messageList: {\n                    ...state.messageList,\n                    [action.chatId]: [\n                        ...currentList,\n                        {\n                            id: `${action.chatId}.${currentList.length+1}`,\n                            text: 'Я бот',\n                            author: BOT,\n                        },\n                    ],\n                },\n            };\n        };\n        case DEL_MESSAGES_WITH_CHAT: {\n            delete state.messageList[\"Chat\"+action.chatId];\n            const currentList = state.messageList;\n            return {\n                ...state,\n                messageList: {\n                    ...currentList\n                }\n            };\n        };\n             \n        default:\n            return state;\n    }\n};"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,sBAAvC,QAAqE,4BAArE;AAEA,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE;IACT,SAAS,CAAC;MACNC,EAAE,EAAE,SADE;MAENC,IAAI,EAAE,UAFA;MAGNC,MAAM,EAAET;IAHF,CAAD,CADA;IAMT,SAAS,CAAC;MACNO,EAAE,EAAE,SADE;MAENC,IAAI,EAAE,aAFA;MAGNC,MAAM,EAAER;IAHF,CAAD;EANA;AADI,CAArB;AAgBA,OAAO,MAAMS,eAAe,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EAC7D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,WAAL;MAAkB;QACd,MAAMY,WAAW,GAAGH,KAAK,CAACL,WAAN,CAAkBM,MAAM,CAACG,MAAzB,KAAoC,EAAxD;QACA,OAAO,EACH,GAAGJ,KADA;UAEHL,WAAW,EAAE,EACT,GAAGK,KAAK,CAACL,WADA;YAET,CAACM,MAAM,CAACG,MAAR,GAAiB,CACb,GAAGD,WADU,EAEb;cACIP,EAAE,EAAG,GAAEK,MAAM,CAACG,MAAO,IAAGD,WAAW,CAACE,MAAZ,GAAmB,CAAE,EADjD;cAEIR,IAAI,EAAEI,MAAM,CAACK,OAFjB;cAGIR,MAAM,EAAET;YAHZ,CAFa;UAFR;QAFV,CAAP;MAcH;MAAA;;IACD,KAAKG,eAAL;MAAsB;QAClB,MAAMW,WAAW,GAAGH,KAAK,CAACL,WAAN,CAAkBM,MAAM,CAACG,MAAzB,KAAoC,EAAxD;QACA,OAAO,EACH,GAAGJ,KADA;UAEHL,WAAW,EAAE,EACT,GAAGK,KAAK,CAACL,WADA;YAET,CAACM,MAAM,CAACG,MAAR,GAAiB,CACb,GAAGD,WADU,EAEb;cACIP,EAAE,EAAG,GAAEK,MAAM,CAACG,MAAO,IAAGD,WAAW,CAACE,MAAZ,GAAmB,CAAE,EADjD;cAEIR,IAAI,EAAE,OAFV;cAGIC,MAAM,EAAER;YAHZ,CAFa;UAFR;QAFV,CAAP;MAcH;MAAA;;IACD,KAAKG,sBAAL;MAA6B;QACzB,OAAOO,KAAK,CAACL,WAAN,CAAkB,SAAOM,MAAM,CAACG,MAAhC,CAAP;QACA,MAAMD,WAAW,GAAGH,KAAK,CAACL,WAA1B;QACA,OAAO,EACH,GAAGK,KADA;UAEHL,WAAW,EAAE,EACT,GAAGQ;UADM;QAFV,CAAP;MAMH;MAAA;;IAED;MACI,OAAOH,KAAP;EA/CR;AAiDH,CAlDM"},"metadata":{},"sourceType":"module"}