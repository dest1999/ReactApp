{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\serv_\\\\source\\\\repos\\\\TryReact4usik\\\\GB_React\\\\myapp\\\\src\\\\components\\\\FormContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessage, DBAddMessages } from \"../constants/addMessage\";\nimport { setListenerDBMessages } from \"../firebase-db-utils\";\nimport { getChatList } from \"../store/selectors/chats\";\nimport { getMessagesList } from \"../store/selectors/messages\";\nimport { getUser } from \"../store/selectors/users\";\nimport { Form } from \"./Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormContainer = _ref => {\n  _s();\n\n  let {\n    name\n  } = _ref;\n  const id = useSelector(getChatList).filter(list => list.name === name)[0].id;\n  const userId = useSelector(getUser).uid;\n  const messagesList = useSelector(getMessagesList);\n  useEffect(() => {\n    if (setListenerDBMessages(id, userId) && messagesList[id] === undefined) {\n      dispatch(DBAddMessages(userId, id, setListenerDBMessages(id, userId)));\n    }\n  });\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n\n  const handleChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const onAddMessage = () => {\n    dispatch(addMessage(id, message, userId));\n    setMessage('');\n  };\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    handleChange: handleChange,\n    onAddMessage: onAddMessage,\n    inputRef: inputRef,\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FormContainer, \"zMypEErJyhWN/ZjlBdZI7ZeQ1vg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = FormContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDispatch","useSelector","addMessage","DBAddMessages","setListenerDBMessages","getChatList","getMessagesList","getUser","Form","FormContainer","name","id","filter","list","userId","uid","messagesList","undefined","dispatch","message","setMessage","handleChange","event","target","value","onAddMessage","inputRef","current","focus"],"sources":["C:/Users/serv_/source/repos/TryReact4usik/GB_React/myapp/src/components/FormContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessage, DBAddMessages } from \"../constants/addMessage\";\nimport { setListenerDBMessages } from \"../firebase-db-utils\";\nimport { getChatList } from \"../store/selectors/chats\";\nimport { getMessagesList } from \"../store/selectors/messages\";\nimport { getUser } from \"../store/selectors/users\";\nimport { Form } from \"./Form\";\n\nexport const FormContainer = ({ name }) => {\n\n    const id = useSelector(getChatList).filter((list) => list.name === name)[0].id;\n    const userId = useSelector(getUser).uid;\n    const messagesList = useSelector(getMessagesList);\n\n    useEffect(() => {\n        if (setListenerDBMessages(id, userId) && messagesList[id] === undefined) {\n            dispatch(DBAddMessages(userId, id, setListenerDBMessages(id, userId)));\n        }\n    });\n\n    const dispatch = useDispatch();\n\n    const [message, setMessage] = useState('');\n\n    const handleChange = (event) => {\n        setMessage(event.target.value);\n    }\n\n    const onAddMessage = () => {\n        dispatch(addMessage(id, message, userId));\n        setMessage('');\n    }\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current?.focus();\n    }, [message]);\n    \n    return <Form handleChange={handleChange} onAddMessage={onAddMessage} inputRef={inputRef} message={message} />\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,yBAA1C;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAEvC,MAAMC,EAAE,GAAGV,WAAW,CAACI,WAAD,CAAX,CAAyBO,MAAzB,CAAiCC,IAAD,IAAUA,IAAI,CAACH,IAAL,KAAcA,IAAxD,EAA8D,CAA9D,EAAiEC,EAA5E;EACA,MAAMG,MAAM,GAAGb,WAAW,CAACM,OAAD,CAAX,CAAqBQ,GAApC;EACA,MAAMC,YAAY,GAAGf,WAAW,CAACK,eAAD,CAAhC;EAEAP,SAAS,CAAC,MAAM;IACZ,IAAIK,qBAAqB,CAACO,EAAD,EAAKG,MAAL,CAArB,IAAqCE,YAAY,CAACL,EAAD,CAAZ,KAAqBM,SAA9D,EAAyE;MACrEC,QAAQ,CAACf,aAAa,CAACW,MAAD,EAASH,EAAT,EAAaP,qBAAqB,CAACO,EAAD,EAAKG,MAAL,CAAlC,CAAd,CAAR;IACH;EACJ,CAJQ,CAAT;EAMA,MAAMI,QAAQ,GAAGlB,WAAW,EAA5B;EAEA,MAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMwB,YAAY,GAAIC,KAAD,IAAW;IAC5BF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM;IACvBP,QAAQ,CAAChB,UAAU,CAACS,EAAD,EAAKQ,OAAL,EAAcL,MAAd,CAAX,CAAR;IACAM,UAAU,CAAC,EAAD,CAAV;EACH,CAHD;;EAKA,MAAMM,QAAQ,GAAG5B,MAAM,CAAC,IAAD,CAAvB;EAEAC,SAAS,CAAC,MAAM;IAAA;;IACZ,qBAAA2B,QAAQ,CAACC,OAAT,wEAAkBC,KAAlB;EACH,CAFQ,EAEN,CAACT,OAAD,CAFM,CAAT;EAIA,oBAAO,QAAC,IAAD;IAAM,YAAY,EAAEE,YAApB;IAAkC,YAAY,EAAEI,YAAhD;IAA8D,QAAQ,EAAEC,QAAxE;IAAkF,OAAO,EAAEP;EAA3F;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAhCM;;GAAMV,a;UAEER,W,EACIA,W,EACMA,W,EAQJD,W;;;KAZRS,a"},"metadata":{},"sourceType":"module"}